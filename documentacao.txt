Construção da 1° PPT da compass UOL:
    Aqui se encontra o passo a passo de como a atividade individual proposta foi construída.
	
AWS:
    Primeiramente foi construido uma instancia EC2 na AWS com imagem Linux 2 baseado no
sistema Unix, família t3.small, 16GB de SSD, 1 elastic IP, com security group com regras de
entrada e saida para as portas 22,11,2049,80 e 443, com acesso ipv4 livre, ou seja, 0.0.0.0/0.

NFS, oque é?
    Resumidamente, o NFS é um servidor de compartilhamento de diretórios e arquivos com 
computadores da rede, de acesso remoto como se estivesse armazenado localmente. 
	
Obs:todos os comando a seguir foram feitos com o usuário root.
	
Configuração do server-side NFS:
	
"yum update"
    Atualiza os pacotes do sistema.	
	
"yum install nfs-utils"
    Instala todos os componentes necessários pra rodar um servidor nfs na sua máquina.
	
"mkdir /pasta-compartilhada"
    Cria a pasta que sera compartilhada pelo servidor nfs.
	
"echo "/pasta-compartilhada 10.0.0.0(rw,sync,no_subtree_check)" | sudo tee -a /etc/exports"
	"echo": cria uma string de texto representando a configuração do nfs;
		
	"/pasta-compartilhada": específica o caminho do diretório que será compartilhado;
		
	"10.0.0.0": define a faixa de ip que poderá se conectar ao servidor;
	
	"(rw,sync,no_subtree_check)": define as permissões e opções para o compartilhamento.
	"rw" é a permissão de leitura e gravação. "sync", o servidor repondera os pedidos 
dos clientes apenas depois que os dados forem gravados no disco, porem, afeta o desempenho. 
"no_subtree_check", desativa a verificação de subdiretórios, podendo melhorar o desempenho,
porem menos seguro se os diretórios tiverem permissões diferentes.
		
	"| sudo tee -a /etc/exports":direciona a saída do comando "echo" para o arquivo "/etc/exports", 
o "tee" é usado pra escrever a saída no arquivo e no terminal, "-a" indica ao "tee" que deve 
fazer um append ao arquivo existente.
		
"exports -rv"
	"exportfs" gerencia as exportações NFS do sistema, "-rv" indicam ao exportfs para exibir as exportações
de forma verbosa e recarregar a lista de exportação do arquivo "etc/exports" o "-r" tambem é usado
para aplicar alterações no arquivo sem reiniciar o serviço NFS.
		
"systemctl restart nfs-server"
	Reinicia o servidor nfs.  
		
 "systemctl enable nfs-server" 
	Ativa o servidor toda vez que o sistema é iniciado.


configuração do client-side NFS:

"mkdir /nfs_compartilhado"
	Cria um diretorio com o nome de "nfs_compartilhado" nas pasta /

"sudo mount -t nfs 10.0.7.199:/nfs_server/jonata_nery /nfs_compartilhado/"
	"mount" monta um sistema de arquivos no diretorio especificado,  "-t nfs" especifica que 
tipo de sistema sera montado, "10.0.7.199:/nfs_server/jonata_nery" indica o ip onde 
se encontra o servidor nfs e qual pasta ele esta expontando, "/nfs_compartilhado/" indica 
o ponto de montagem local onde o sistema sera acessivel.
		

Configurando o o servidor apache 

"yum install httpd"
	Instala os repositórios do servidor apache no sistema do seu linux.
	
"systemctl start httpd"
	Inicia o servidor apache.

"systemctl enable httpd"
	Usado para iniciar o servidor apache junto com o boot do sistema.
	
onde se encontra o diretório www pra configuração da pagina web?
	A pagina web que se encontra quando é pesquisado pelo ip da maquina no navegador pode
	ser atualizada diretório "/var/www".

Desenvolvimento do Script de resposta ao status do servidor
Dentro do arquivo script:
"#!/bin/bash"
	serve para mostrar que o script deve ser interpretado pelo bash, que é o shell de linha de comando.

"NFS_DIRETORIO="/nfs_server/jonata_nery""
	Cria uma variável onde sera armazenado os arquivos de saida.

"SERVICO="httpd""
	Cria uma variável atribuindo que tipo de serviço sera verificado o status.
		
"STATUS=$(systemctl is-active $SERVICO)"
	Cria e atribui a uma variável o status de ativo ou não a uma variável 
 
"if [ "$STATUS" = "active" ];then
	mensagem="Online"
	ARQUIVO_SAIDA="$NFS_DIRETORIO/${SERVICO}_online.txt"
else
	mensagem="Offline"
	ARQUIVO_SAIDA="$NFS_DIRETORIO/${SERVICO}_offline.txt"
fi"
    verifica o estado da variável status,se o valor for "ativo", cria uma variável atribuindo uma string  
"online" e cria outra variável passando oque é o arquivo de saida pra o estado "online".
Caso o status não seja "active", É criada uma variável recebendo uma mensagem de "offline" e outra 
variável passando oque seria um arquivo de saída pra o estado de "offline"

"DATA_HORA=$(date +"%Y-%m-%d %H:%M:%S")"
	atribui a uma variável a hora e data atual do local do servidor 

"echo "Data/Hora: $DATA_HORA" > "$ARQUIVO_SAIDA"
echo "Serviço: $SERVICO" >> "$ARQUIVO_SAIDA"
echo "Status: $STATUS" >> "$ARQUIVO_SAIDA"
echo "Mensagem: $mensagem" >> "$ARQUIVO_SAIDA""
	Imprime dentro do arquivo de saida a hora e data que foi executado o script, serviço que esta 
sendo verificado, o status do serviço, e uma mensagem de "online" ou "offline".

Fora do arquivo sript:
"chmod +x /nfs_server/script-atividade.sh"
	Da ao script-atividade.sh a permissão de execução.
	
"crontab -e"
	Usado para que possamos editar a tabela cron, assim podemos agendar a execução de algum arquivo com a
linha "*/5 * * * * /nfs_server/script-atividade.sh"
